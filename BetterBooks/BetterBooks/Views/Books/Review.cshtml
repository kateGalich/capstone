@model  BetterBooks.Models.ReviewVM

@{
    ViewBag.Title = "Review";
}

<h2 class="text-center">Review</h2>
<hr />

@*@{
        BetterBooks.Models.BookReview book = ViewData["book1"] as BetterBooks.Models.BookReview;
    }*@
<div class="row">
    @*<h4>Book</h4>
        <hr />*@
    <div class="col-md-4">
        @if (Model.Book.Image == null)
        {
            <img width="160" height="160" src="~/Content/default_cover.jpg" />
        }
        else
        {
            <img width="160" height="160" src="/Books/Image/@Model.Book.Id" />
        }
    </div>

    <div class="col-md-8">
        <h3>@Model.Book.Title</h3>
        <h5>@Model.Book.Author</h5>
        <h5>Reviews (<span class="text-primary">@Model.Revcount</span>)</h5>
        <h6>Description</h6>
        <p>@Model.Book.Description</p>
        <h5>@Model.Book.Year</h5>
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{<header class='header text-center'>
     <h2>Add Rating </h2>

    </header>

    <section class='rating-widget'>

        <!-- Rating Stars Box -->
        <div class='rating-stars text-center'>
            <ul id='stars'>
                <li class='star' title='Poor' data-value='1'>
                    <i class='fa fa-star fa-fw'></i>
                </li>
                <li class='star' title='Fair' data-value='2'>
                    <i class='fa fa-star fa-fw'></i>
                </li>
                <li class='star' title='Good' data-value='3'>
                    <i class='fa fa-star fa-fw'></i>
                </li>
                <li class='star' title='Excellent' data-value='4'>
                    <i class='fa fa-star fa-fw'></i>
                </li>
                <li class='star' title='WOW!!!' data-value='5'>
                    <i class='fa fa-star fa-fw'></i>
                </li>
            </ul>
        </div>

        <div class='success-box'>
            <div class='clearfix'></div>
            <img alt='tick image' width='32' src='data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCA0MjYuNjY3IDQyNi42NjciIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDQyNi42NjcgNDI2LjY2NzsiIHhtbDpzcGFjZT0icHJlc2VydmUiIHdpZHRoPSI1MTJweCIgaGVpZ2h0PSI1MTJweCI+CjxwYXRoIHN0eWxlPSJmaWxsOiM2QUMyNTk7IiBkPSJNMjEzLjMzMywwQzk1LjUxOCwwLDAsOTUuNTE0LDAsMjEzLjMzM3M5NS41MTgsMjEzLjMzMywyMTMuMzMzLDIxMy4zMzMgIGMxMTcuODI4LDAsMjEzLjMzMy05NS41MTQsMjEzLjMzMy0yMTMuMzMzUzMzMS4xNTcsMCwyMTMuMzMzLDB6IE0xNzQuMTk5LDMyMi45MThsLTkzLjkzNS05My45MzFsMzEuMzA5LTMxLjMwOWw2Mi42MjYsNjIuNjIyICBsMTQwLjg5NC0xNDAuODk4bDMxLjMwOSwzMS4zMDlMMTc0LjE5OSwzMjIuOTE4eiIvPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K' />
            <div class='text-message'></div>
            <div class='clearfix'></div>
        </div>



    </section>




    <div class="row">
        <div class="col-md-8">
            <form asp-action="Review" @*asp-route-id="@ViewData["book"]"*@ method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="BookReview.Review" class="control-label">Add a written Reviews</label>
                    @Html.EditorFor(model => model.BookReview.Review, new { htmlAttributes = new { style = "width:500px", @class = "form-control" } })
                    @*<input asp-for="BookReview.Review" class="form-control" />*@
                    @Html.HiddenFor(model => model.BookReview.RateValue, new { id = "hat" })
                    @Html.HiddenFor(model => model.BookReview.BookId)

                </div>

                <div class="form-group">
                    <input type="submit" value="Add Review" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}
<h1 class="text-center">Reviews</h1>
<hr />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.BookReviews)
        </th>

        <th>Rating</th>
    </tr>


    @foreach (var item in Model.BookReviews)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Review)
            </td>
            <td>

                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= item.RateValue)
                    {
                        <span style="color: #FF912C;" class="fa fa-star"></span>
                    }
                    else
                    {
                        <span class="fa fa-star selected"></span>
                    }
                }
            </td>

        </tr>
    }


</table>
<h3>Reviews <span>(@Model.Revcount)</span></h3>
<div>
    @Html.ActionLink("Go back", "Details", new { id = Model.Book.Id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="https://kit.fontawesome.com/e19c476714.js"></script>*@
    <script>
        $(document).ready(function () {

            /* 1. Visualizing things on Hover - See next part for action on click */
            $('#stars li').on('mouseover', function () {
                var onStar = parseInt($(this).data('value'), 10); // The star currently mouse on

                // Now highlight all the stars that's not after the current hovered star
                $(this).parent().children('li.star').each(function (e) {
                    if (e < onStar) {
                        $(this).addClass('hover');
                    }
                    else {
                        $(this).removeClass('hover');
                    }
                });

            }).on('mouseout', function () {
                $(this).parent().children('li.star').each(function (e) {
                    $(this).removeClass('hover');
                });
            });


            /* 2. Action to perform on click */
            $('#stars li').on('click', function () {
                var onStar = parseInt($(this).data('value'), 10); // The star currently selected
                var stars = $(this).parent().children('li.star');

                for (i = 0; i < stars.length; i++) {
                    $(stars[i]).removeClass('selected');
                }

                for (i = 0; i < onStar; i++) {
                    $(stars[i]).addClass('selected');
                }

                // JUST RESPONSE (Not needed)
                var ratingValue = parseInt($('#stars li.selected').last().data('value'), 10);
                $('#hat').val(ratingValue);
                var msg = "";
                if (ratingValue > 1) {
                    msg = "Thanks! You rated this " + ratingValue + " stars.";
                }
                else {
                    msg = "We will improve ourselves. You rated this " + ratingValue + " stars.";
                }
                responseMessage(msg);

            });


        });


        function responseMessage(msg) {
            $('.success-box').fadeIn(200);
            $('.success-box div.text-message').html("<span>" + msg + "</span>");
        }
    </script>
}
